<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
	<bean id="welcomeService" name="w1 w2" class="com.imooc.service.impl.WelcomeServiceImpl"/>
    <!--测试没有名称的class-->
   <!-- <bean class="com.imooc.service.impl.WelcomeServiceImpl"/>-->
	<!-- 1.使用类的无参构造函数创建 -->
	<bean id="user1"  name = "user1" class="com.imooc.entity.User" scope="singleton" lazy-init="true" primary="true"/>
	<alias name="user1" alias="userAlias1,userAlias2,userAlias3"/>
	<!-- 2.使用静态工厂进行创建 -->
	<!-- class的值不是写User对象的全路径，而是写静态工厂的全路径 -->
	<!-- factory-method的值写要调用的方法 -->
	<bean id="user2" class="com.imooc.entity.factory.StaticFactory" factory-method="getUser" scope="singleton"/>
	<!-- 3.使用实例工厂进行创建 -->
	<!-- 需要先创建factoryBean对象，再通过factoryBean对象进行调用 -->
	<bean id="userFactory" class="com.imooc.entity.factory.UserFactory"/>
	<bean id="user3" factory-bean="userFactory" factory-method="getUser" scope="prototype" />


	<bean id="userFactoryBean" class="com.imooc.entity.factory.UserFactoryBean"/>


    <!--实现了DisposableBean接口,依赖destroy2-->
    <bean class="com.imooc.destory.Destroy.Destroy1" name="destroy1" depends-on="destroy2"/>
    <!--配置了destroy属性-->
    <bean class="com.imooc.destory.Destroy.Destroy2" name="destroy2" destroy-method="destroy"/>
    <!--没有配置回调函数-->
    <bean class="com.imooc.destory.Destroy.Destroy3" name="destroy3"/>

    <!-- 配置自动扫描的包 SpringMVC-->
   <!-- <context:component-scan base-package="com.mybatis.ssm" use-default-filters="false">
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>-->

    <!-- 配置自动扫描的包 Spring-->
    <!--和扫描META-INF下面的spring-componnets -->
    <context:component-scan base-package="com.imooc.controller" />

    <!-- <context:component-scan base-package="com.imooc.controller" use-default-filters="false">
     <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
     </context:component-scan>-->

</beans>

